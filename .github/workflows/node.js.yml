# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

jobs:
    check:
        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [18.x]
                # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

        steps:
            - uses: actions/checkout@v3
              with:
                  fetch-depth: 0

            - name: Changed Files
              id: changed-files
              uses: tj-actions/changed-files@v35.6.3
              with:
                  files: |
                      src
                      types

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: "npm"
            - run: npm ci
            - run: npm run ci

    publish:
        needs: check
        if: ${{ github.repository_owner == 'dirain1700' && jobs.check.steps.changed-files.outputs.any_changed == 'true' }}
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [18.x]
        steps:
            - uses: actions/checkout@v3

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
                  registry-url: "https://registry.npmjs.org"
                  scope: "@dirain"
                  always-auth: true

            - run: npm ci
            - run: npm version prerelease --preid "dev.$(date +%s)-$(git rev-parse --short HEAD)" --no-git-tag-version
            - run: npm publish --tag dev
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
